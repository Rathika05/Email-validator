import re
from google.colab import files

# Function to validate an email address
def ValidateEmail(TestString):
    """
    Validates the given email address based on specified rules.

    Args:
        TestString (str): The email address to validate.
    Returns:
        str: "VALID" if the email address is valid, otherwise "INVALID".
    """
    # Regular expression to validate email
    email_regex = r'^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'

    # Check if the email matches the regex
    if re.match(email_regex, TestString):
        return "VALID"
    else:
        return "INVALID"

# Interactive Mode
def InteractiveMode():
    """
    Allows the user to interactively test email validation via console input.
    """
    print("Enter email addresses to validate (type 'exit' to quit):")
    while True:
        email = input("Enter an email: ").strip()
        if email.lower() == "exit":
            print("Exiting interactive mode.")
            break
        result = ValidateEmail(email)
        print(f"{result} {email}")

# Batch Mode
def BatchMode():
    """
    Processes emails in batch mode using uploaded input file and downloads output file.

    1. User uploads an input file containing email addresses.
    2. The program validates each email address and creates an output file.
    3. The output file is made available for download.
    """
    print("Please upload the input file (text file containing email addresses):")
    uploaded = files.upload()
    input_filename = list(uploaded.keys())[0]

    output_filename = "output.txt"

    try:
        with open(input_filename, 'r') as infile, open(output_filename, 'w') as outfile:
            for line in infile:
                email = line.strip()
                result = ValidateEmail(email)
                outfile.write(f"{result} {email}\n")
        print(f"Batch processing completed. Results saved to {output_filename}.")
        print("Downloading the output file...")
        files.download(output_filename)
    except FileNotFoundError:
        print(f"Error: File {input_filename} not found.")

# Main menu for choosing interactive or batch mode
def main():
    print("Email Validator")
    print("Choose a mode:")
    print("1. Interactive Mode")
    print("2. Batch Mode")
    choice = input("Enter your choice (1 or 2): ").strip()

    if choice == '1':
        InteractiveMode()
    elif choice == '2':
        BatchMode()
    else:
        print("Invalid choice. Exiting.")

if __name__ == "__main__":
    main()